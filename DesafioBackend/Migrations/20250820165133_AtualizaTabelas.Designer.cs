// <auto-generated />
using System;
using DesafioBackend.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820165133_AtualizaTabelas")]
    partial class AtualizaTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioBackend.Model.Entregador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador");

                    b.Property<string>("ImagemCnh")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagem_cnh");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NumeroCnh")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_cnh");

                    b.Property<string>("TipoCnh")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_cnh");

                    b.HasKey("Id");

                    b.ToTable("entregador");
                });

            modelBuilder.Entity("DesafioBackend.Model.Locacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_devolucao");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataPrevisaoTermino")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_previsao_termino");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_termino");

                    b.Property<long>("EntregadorId")
                        .HasColumnType("bigint")
                        .HasColumnName("entregador_id");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador");

                    b.Property<long>("MotoId")
                        .HasColumnType("bigint")
                        .HasColumnName("moto_id");

                    b.Property<int>("Plano")
                        .HasColumnType("integer")
                        .HasColumnName("plano");

                    b.Property<decimal>("ValorDiaria")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_diaria");

                    b.HasKey("Id");

                    b.HasIndex("EntregadorId");

                    b.HasIndex("MotoId");

                    b.ToTable("locacao");
                });

            modelBuilder.Entity("DesafioBackend.Model.Moto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modelo");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("placa");

                    b.HasKey("Id");

                    b.ToTable("moto");
                });

            modelBuilder.Entity("DesafioBackend.Model.Locacao", b =>
                {
                    b.HasOne("DesafioBackend.Model.Entregador", "Entregador")
                        .WithMany()
                        .HasForeignKey("EntregadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBackend.Model.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entregador");

                    b.Navigation("Moto");
                });
#pragma warning restore 612, 618
        }
    }
}
