// <auto-generated />
using System;
using DesafioBackend.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250822011253_AdicionaTabelaMensageria")]
    partial class AdicionaTabelaMensageria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioBackend.Model.DeliveryDriver", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento")
                        .HasAnnotation("Relational:JsonPropertyName", "data_nascimento");

                    b.Property<string>("CnhImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagem_cnh")
                        .HasAnnotation("Relational:JsonPropertyName", "imagem_cnh");

                    b.Property<string>("CnhNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_cnh")
                        .HasAnnotation("Relational:JsonPropertyName", "numero_cnh");

                    b.Property<string>("CnhType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_cnh")
                        .HasAnnotation("Relational:JsonPropertyName", "tipo_cnh");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj")
                        .HasAnnotation("Relational:JsonPropertyName", "cnpj");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome")
                        .HasAnnotation("Relational:JsonPropertyName", "nome");

                    b.HasKey("Id");

                    b.ToTable("entregador");

                    b.HasAnnotation("Relational:JsonPropertyName", "entregador");
                });

            modelBuilder.Entity("DesafioBackend.Model.Motorcycle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modelo")
                        .HasAnnotation("Relational:JsonPropertyName", "modelo");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("placa")
                        .HasAnnotation("Relational:JsonPropertyName", "placa");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("ano")
                        .HasAnnotation("Relational:JsonPropertyName", "ano");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("moto");

                    b.HasAnnotation("Relational:JsonPropertyName", "moto");
                });

            modelBuilder.Entity("DesafioBackend.Model.MotorcycleNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modelo");

                    b.Property<long>("MotorcycleId")
                        .HasColumnType("bigint")
                        .HasColumnName("motorcycleid");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("placa");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("receivedat");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.HasKey("Id");

                    b.ToTable("moto_notification");
                });

            modelBuilder.Entity("DesafioBackend.Model.Rental", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_diaria")
                        .HasAnnotation("Relational:JsonPropertyName", "valor_diaria");

                    b.Property<long>("DeliveryDriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("entregador_id")
                        .HasAnnotation("Relational:JsonPropertyName", "entregador_id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_termino")
                        .HasAnnotation("Relational:JsonPropertyName", "data_termino");

                    b.Property<DateTime>("ExpectedEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_previsao_termino")
                        .HasAnnotation("Relational:JsonPropertyName", "data_previsao_termino");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificador")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador");

                    b.Property<long>("MotorcycleId")
                        .HasColumnType("bigint")
                        .HasColumnName("moto_id")
                        .HasAnnotation("Relational:JsonPropertyName", "moto_id");

                    b.Property<int>("Plan")
                        .HasColumnType("integer")
                        .HasColumnName("plano")
                        .HasAnnotation("Relational:JsonPropertyName", "plano");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_devolucao")
                        .HasAnnotation("Relational:JsonPropertyName", "data_devolucao");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio")
                        .HasAnnotation("Relational:JsonPropertyName", "data_inicio");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryDriverId");

                    b.HasIndex("MotorcycleId");

                    b.ToTable("locacao");
                });

            modelBuilder.Entity("DesafioBackend.Model.Rental", b =>
                {
                    b.HasOne("DesafioBackend.Model.DeliveryDriver", "DeliveryDriver")
                        .WithMany()
                        .HasForeignKey("DeliveryDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBackend.Model.Motorcycle", "Motorcycle")
                        .WithMany()
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryDriver");

                    b.Navigation("Motorcycle");
                });
#pragma warning restore 612, 618
        }
    }
}
